POUND #
INCLUDE include
L_ANGLE <
ID iostream
R_ANGLE >
USING using
NAMESPACE namespace
FUNCTION home
L_PAREN (
TYPE int
ID argc
COMMA ,
TYPE char
ASTERISK *
ASTERISK *
ID argv
R_PAREN )
L_BRACKET {
TYPE double
ID a
ASSIGNMENT =
CONSTANT 0
SEMICOLON ;
TYPE int
ID s
ASSIGNMENT =
CONSTANT 1
SEMICOLON ;
WHILE while
L_PAREN (
CONSTANT 1
R_PAREN )
L_BRACKET {
SWITCH switch
L_PAREN (
ID s
R_PAREN )
L_BRACKET {
CASE case
CONSTANT 0
COLON :
SWITCH switch
L_PAREN (
FUNCTION getchar
L_PAREN (
R_PAREN )
R_PAREN )
L_BRACKET {
CASE case
S_QUOTE '
STRING 1
S_QUOTE '
COLON :
ID s
ASSIGNMENT =
CONSTANT 1
SEMICOLON ;
BREAK break
SEMICOLON ;
CASE case
EOF EOF
COLON :
OUTPUT cout
L_ANGLE <
L_ANGLE <
STRING 
D_QUOTE "
STRING Yes
D_QUOTE "
SEMICOLON ;
RETURN return
CONSTANT 0
SEMICOLON ;
DEFAULT default
COLON :
ID s
ASSIGNMENT =
CONSTANT 0
SEMICOLON ;
BREAK break
SEMICOLON ;
R_BRACKET }
BREAK break
SEMICOLON ;
CASE case
CONSTANT 1
COLON :
SWITCH switch
L_PAREN (
FUNCTION getchar
L_PAREN (
R_PAREN )
R_PAREN )
L_BRACKET {
CASE case
STRING 
S_QUOTE '
STRING 1
S_QUOTE '
COLON :
ID s
ASSIGNMENT =
CONSTANT 0
SEMICOLON ;
BREAK break
SEMICOLON ;
CASE case
EOF EOF
COLON :
OUTPUT cout
L_ANGLE <
L_ANGLE <
STRING 
D_QUOTE "
STRING No
D_QUOTE "
SEMICOLON ;
RETURN return
CONSTANT 0
SEMICOLON ;
DEFAULT default
COLON :
ID s
ASSIGNMENT =
CONSTANT 1
SEMICOLON ;
BREAK break
SEMICOLON ;
R_BRACKET }
R_BRACKET }
R_BRACKET }
R_BRACKET }
R_BRACKET }
